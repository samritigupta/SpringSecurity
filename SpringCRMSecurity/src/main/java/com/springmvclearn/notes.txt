CRM Customer Relationship Manager

                |   /customer/list
                |   -------------->   Customer Controller
                |                           |
        web     |                           |
        Browser |                           |
                |                           |
                |                           |
                |                           |
                |                           >
                |    <--------------    list-customers.jsp



  Big Picture           1                                     2     (Data access Object)   3
                |   -------------->   Customer Controller <-------->  Customer DAO       <----> DB
                |                           |
        web     |                           |
        Browser |                           |
                |                           |4
                |                           |
                |                           |
                |           5                >
                |    <--------------    JSP PAGES



    - DATA ACCESS OBJECT
    1. Responsible for interfacing with the database  (will use hibernate for this)
    2. this is common design pattern dao



    - List of customers
    1. Customer(Model/Entity)
    2. Customer Dao
    3. Customer Controller
    4. Jsp page list-customer



          @Component  (register beans)  <------ @Service (spring will automatically register the service impl.)
      |                 |
      |                 |
  @Controller       @Repository (DAO) -> spring will automatically provide translation for any JDBC related
                                            exceptions


  - @RequestMapping(value = "/ex/foos", method = POST
  @RequestMapping(value = "/ex/foos", method = GET

  Now to limit get and post new annotaions are used
  @GetMapping() and @PostMapping

  - Get                                             Post
  1. Good for debugging                     can't bookmark or email url
  2. bookmark or email url                  no limitation on data length
  3. limitation on data length              can also send binary data


  Customer controller <---> customer service <---> customer dao <---> db

  after service layer @Transactional all service layer will handle and so can remove @Transactional from DAO.


  Customer service layer
  - implementation of custom facade service layer.
                     /-->license dao
                    /
        service layer -----> customer dao
                   \
                    \
                     \> sales dao
